{"version":3,"sources":["Images/type_icons/SVG sync /^/.//.*/.svg$","Images/type_icons/SVG/Bug.svg","Images/type_icons/SVG/Dark.svg","Images/type_icons/SVG/Dragon.svg","Images/type_icons/SVG/Electric.svg","Images/type_icons/SVG/Fairy.svg","Images/type_icons/SVG/Fighting.svg","Images/type_icons/SVG/Fire.svg","Images/type_icons/SVG/Flying.svg","Images/type_icons/SVG/Ghost.svg","Images/type_icons/SVG/Grass.svg","Images/type_icons/SVG/Ground.svg","Images/type_icons/SVG/Ice.svg","Images/type_icons/SVG/Normal.svg","Images/type_icons/SVG/Poison.svg","Images/type_icons/SVG/Psychic.svg","Images/type_icons/SVG/Rock.svg","Images/type_icons/SVG/Steel.svg","Images/type_icons/SVG/Water.svg","Components/Filters.js","Components/ListItem.js","Components/ListPage.js","Components/DetailPage.js","Components/Pokedex.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Filters","props","handleTypeFilter","typeFilters","indexOf","target","splice","push","classList","contains","remove","add","setTypeFilters","handleWeaknessFilter","weaknessFilters","setWeaknessFilters","useEffect","fullList","items","length","filtList","filter","item","typeFiltered","weaknessFiltered","forEach","type","includes","weakness","weaknesses","setFilteredList","className","placeholder","value","search","onChange","event","setSearch","types","sort","key","onClick","ListItem","pokemon","setSelected","src","img","alt","name","num","style","margin","display","flexDirection","require","toUpperCase","ListPage","filteredList","slice","width","to","selected","selectedEvol","setSelectedEvol","DetailPage","height","weight","prev_evolution","next_evolution","evol","find","el","Pokedex","useState","error","setError","isLoaded","setIsLoaded","setItems","prevSelected","setPrevSelected","fetch","then","res","json","result","evolutions","typeList","weaknessList","basename","exact","path","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"wHAAA,IAAIA,EAAM,CACT,YAAa,GACb,aAAc,GACd,eAAgB,GAChB,iBAAkB,GAClB,cAAe,GACf,iBAAkB,GAClB,aAAc,GACd,eAAgB,GAChB,cAAe,GACf,cAAe,GACf,eAAgB,GAChB,YAAa,GACb,eAAgB,GAChB,eAAgB,GAChB,gBAAiB,GACjB,aAAc,GACd,cAAe,GACf,cAAe,IAIhB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,kGCvCpBU,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,kHC+F5BC,MA7Ff,SAAiBC,GAEb,IAIMC,EAAmB,SAACV,GACtB,IAAIW,EAAW,YAAOF,EAAME,aAExBA,EAAYC,QAAQZ,EAAEa,OAAOjB,KAAO,EACpCe,EAAYG,OAAOH,EAAYC,QAAQZ,EAAEa,OAAOjB,IAAK,GAErDe,EAAYI,KAAKf,EAAEa,OAAOjB,IAG1BI,EAAEa,OAAOG,UAAUC,SAAS,YAC5BjB,EAAEa,OAAOG,UAAUE,OAAO,YAE1BlB,EAAEa,OAAOG,UAAUG,IAAI,YAG3BV,EAAMW,eAAeT,IAGnBU,EAAuB,SAACrB,GAC1B,IAAIsB,EAAe,YAAOb,EAAMa,iBAC5BA,EAAgBV,QAAQZ,EAAEa,OAAOjB,KAAO,EACxC0B,EAAgBR,OAAOQ,EAAgBV,QAAQZ,EAAEa,OAAOjB,IAAK,GAE7D0B,EAAgBP,KAAKf,EAAEa,OAAOjB,IAG9BI,EAAEa,OAAOG,UAAUC,SAAS,YAC5BjB,EAAEa,OAAOG,UAAUE,OAAO,YAE1BlB,EAAEa,OAAOG,UAAUG,IAAI,YAG3BV,EAAMc,mBAAmBD,IA6B7B,OAzBAE,qBAAU,WACN,IAAIC,EAAQ,YAAOhB,EAAMiB,OACzB,GAAKjB,EAAME,YAAYgB,QAAWlB,EAAMa,gBAAgBK,OAAxD,CAIA,IAAIC,EAAWH,EAASI,QAAO,SAACC,GAC5B,IAAIC,GAAe,EACfC,GAAmB,EAYvB,OAXAvB,EAAME,YAAYsB,SAAQ,SAACC,GAClBJ,EAAKI,KAAKC,SAASD,KACpBH,GAAe,MAGvBtB,EAAMa,gBAAgBW,SAAQ,SAACG,GACtBN,EAAKO,WAAWF,SAASC,KAC1BJ,GAAmB,MAIpBD,GAAgBC,KAE3BvB,EAAM6B,gBAAgBV,QAnBlBnB,EAAM6B,gBAAgBb,KAoB3B,CAAChB,EAAME,YAAaF,EAAMa,kBAGzB,6BACI,yBAAKiB,UAA8E,cACnF,2BAAOL,KAAK,OAAOM,YAAY,oBAAiBC,MAAOhC,EAAMiC,OAAQC,SApExD,SAAAC,GACjBnC,EAAMoC,UAAUD,EAAM/B,OAAO4B,UAoErB,2CACA,yBAAKF,UAAU,WACV9B,EAAMqC,MAAMC,OAAOtD,KAAI,SAACyC,GACrB,OACA,yBAAKc,IAAKd,EAAMtC,GAAIsC,EAAMK,UAAW9B,EAAME,YAAYwB,SAASD,GAAQ,yBAA2B,gBAAiBe,QAASvC,GAAmBwB,OAIxJ,6BACA,iDACA,yBAAKK,UAAU,WACV9B,EAAM4B,WAAWU,OAAOtD,KAAI,SAAC2C,GAC1B,OACA,yBAAKY,IAAKZ,EAAUxC,GAAIwC,EAAUG,UAAW9B,EAAMa,gBAAgBa,SAASC,GAAY,yBAA2B,gBAAiBa,QAAS5B,GAAuBe,UCpC7Kc,MAhDf,SAAkBzC,GAMd,OACI,yBAAK8B,UAAU,UACX,yBAAKA,UAAU,YAAYU,QAPd,WACjB,IAAME,EAAU1C,EAAMqB,KACtBrB,EAAM2C,YAAYD,KAMV,yBAAKZ,UAAU,SACX,yBAAKA,UAAU,gBAAgBc,IAAK5C,EAAMqB,KAAKwB,IAAKC,IAAK9C,EAAMqB,KAAK0B,QAExE,yBAAKjB,UAAU,QACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,OAAO9B,EAAMqB,KAAK2B,KACjC,yBAAKlB,UAAU,QAAQ9B,EAAMqB,KAAK0B,OAEtC,yBAAKjB,UAAU,oBACX,yBAAKA,UAAU,SACX,yBAAKmB,MAAO,CAACC,OAAQ,iBAArB,QACA,yBAAKD,MAAO,CAACE,QAAS,OAAQC,cAAe,QACxCpD,EAAMqB,KAAKI,KAAKzC,KAAI,SAAAyC,GAAI,OACzB,yBAAKc,IAAG,UAAKd,EAAL,QAAiBK,UAAU,YAC/B,yBAAKA,UAAU,aAAaS,IAAKd,EAAMqB,IAAKrB,EAAMmB,IAAKS,MAAQ,YAA4B5B,EAA7B,WAC9D,uBAAGK,UAAU,cAAcL,EAAK6B,qBAK5C,yBAAKxB,UAAU,cACX,yBAAKmB,MAAO,CAACC,OAAQ,iBAArB,cACA,yBAAKD,MAAO,CAACE,QAAS,OAAQC,cAAe,QACxCpD,EAAMqB,KAAKO,WAAW5C,KAAI,SAAA2C,GAAQ,OACnC,yBAAKY,IAAG,UAAKZ,EAAL,QAAqBG,UAAU,YACnC,yBAAKA,UAAU,aAAaS,IAAKZ,EAAUmB,IAAKnB,EAAUiB,IAAKS,MAAQ,YAA4B1B,EAA7B,WACtE,uBAAGG,UAAU,cAAcH,EAAS2B,0BCOzDC,MAvCf,SAAkBvD,GACd,OACI,6BACI,yBAAK8B,UAAU,qBACX,kBAAC,EAAD,CACIb,MAAOjB,EAAMiB,MACboB,MAAOrC,EAAMqC,MACbT,WAAY5B,EAAM4B,WAClB4B,aAAcxD,EAAMwD,aACpB3B,gBAAiB7B,EAAM6B,gBACvB3B,YAAaF,EAAME,YACnBS,eAAgBX,EAAMW,eACtBE,gBAAiBb,EAAMa,gBACvBC,mBAAoBd,EAAMc,mBAC1BmB,OAAQjC,EAAMiC,OACdG,UAAWpC,EAAMoC,aAGzB,yBAAKN,UAAU,mBACf,yBAAKA,UAAU,kBACV9B,EAAMwD,aAAapC,QAAO,SAAAC,GAAI,OAC3BA,EAAK0B,KAAKU,MAAM,EAAGzD,EAAMiC,OAAOf,QAAQoC,gBAAkBtD,EAAMiC,OAAOqB,iBACxEtE,KAAI,SAAAqC,GAAI,OACP,kBAAC,IAAD,CAAM4B,MAAO,CAACS,MAAO,QAASR,OAAQ,OAAQX,IAAG,UAAKlB,EAAK0B,KAAV,SAAuBY,GAAE,WAC1E,kBAAC,EAAD,CACIpB,IAAKlB,EAAK0B,KACV1B,KAAMA,EACNuC,SAAU5D,EAAM4D,SAChBjB,YAAa3C,EAAM2C,YACnBkB,aAAc7D,EAAM6D,aACpBC,gBAAiB9D,EAAM8D,yB,OCuChCC,MAvEf,SAAoB/D,GAChB,IAAM0C,EAAU1C,EAAM4D,SAEtB,OACI,yBAAK9B,UAAU,OACX,kBAAC,IAAD,CAAMA,UAAU,cAAc6B,GAAG,IAAInB,QAAS,kBAAMxC,EAAM2C,YAAY,QAAtE,6BACA,yBAAKb,UAAU,eACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OAAOY,EAAQM,KAC9B,yBAAKlB,UAAU,QAAQY,EAAQK,OAGnC,yBAAKjB,UAAU,eACX,yBAAKA,UAAU,aAAac,IAAKF,EAAQG,IAAKC,IAAKJ,EAAQG,MAC3D,6BACI,oCACA,yBAAKf,UAAU,OACVY,EAAQjB,KAAKzC,KAAI,SAACyC,GACf,OACI,yBAAKc,IAAG,UAAKd,EAAL,QAAiBK,UAAU,YACvB,yBAAKA,UAAU,aAAaS,IAAKd,EAAMqB,IAAKrB,EAAMmB,IAAKS,MAAQ,YAA4B5B,EAA7B,WAC9D,uBAAGK,UAAU,cAAcL,EAAK6B,oBAKxD,0CACA,yBAAKxB,UAAU,OACVY,EAAQd,WAAW5C,KAAI,SAAC2C,GACrB,OACI,yBAAKY,IAAG,UAAKZ,EAAL,QAAqBG,UAAU,YACnC,yBAAKA,UAAU,aAAaS,IAAKZ,EAAUmB,IAAKnB,EAAUiB,IAAKS,MAAQ,YAA4B1B,EAA7B,WACtE,uBAAGG,UAAU,cAAcH,EAAS2B,oBAKpD,yBAAKxB,UAAU,OACX,yBAAKmB,MAAO,CAACC,OAAQ,IACjB,sCACA,2BAAIR,EAAQsB,SAEhB,yBAAKf,MAAO,CAACC,OAAQ,IACjB,sCACA,2BAAIR,EAAQuB,YAK3BvB,EAAQwB,gBAAkBxB,EAAQyB,eAC/B,yBAAKrC,UAAU,iBACX,yCACA,yBAAKA,UAAU,OACV9B,EAAM6D,aAAa7E,KAAI,SAACoF,GACrB,OACI,yBAAKtC,UAAU,YAAYU,QAAS,kBAAMxC,EAAM2C,YAAY3C,EAAMiB,MAAMoD,MAAK,SAAAC,GAAE,OAAIA,EAAGvB,OAASqB,EAAKrB,WAChG,4BAAKqB,EAAKrB,KAAKO,eACf,yBAAKxB,UAAU,WAAWc,IAAG,mDAA8CwB,EAAKpB,IAAnD,gBAOjD,QCmELuB,MAjIf,WAAoB,IAAD,EACWC,mBAAS,MADpB,mBACRC,EADQ,KACDC,EADC,OAEiBF,oBAAS,GAF1B,mBAERG,EAFQ,KAEEC,EAFF,OAGWJ,mBAAS,IAHpB,mBAGRvD,EAHQ,KAGD4D,EAHC,OAIyBL,mBAAS,IAJlC,mBAIRhB,EAJQ,KAIM3B,EAJN,OAKuB2C,mBAAS,IALhC,mBAKRtE,EALQ,KAKKS,EALL,OAM+B6D,mBAAS,IANxC,mBAMR3D,EANQ,KAMSC,EANT,OAOa0D,mBAAS,IAPtB,mBAORvC,EAPQ,KAOAG,EAPA,OAQiBoC,mBAAS,MAR1B,mBAQRZ,EARQ,KAQEjB,EARF,OASyB6B,mBAAS,MATlC,mBASRM,EATQ,KASMC,EATN,OAUyBP,mBAAS,IAVlC,mBAURX,EAVQ,KAUMC,EAVN,KA2Df,GA7CA/C,qBAAU,WACNiE,MAAM,iFACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACGR,GAAY,GACZC,EAASO,EAAO1C,SAChBb,EAAgBuD,EAAO1C,YAE3B,SAAC+B,GACGG,GAAY,GACZF,EAASD,QAGtB,IAEH1D,qBAAU,WACNgE,EAAgB9D,EAAM,MACvB,CAACA,IAEJF,qBAAU,WACF6C,GAAYA,IAAakB,GACzBC,EAAgBnB,KAErB,CAACA,IAEJ7C,qBAAU,WACN,IAAIsE,EAAa,GACbzB,GAAYA,EAASM,gBACrBN,EAASM,eAAe1C,SAAQ,SAAC4C,GAC7BiB,EAAW/E,KAAK8D,MAGpBR,IAAaA,EAASM,gBAAkBN,EAASO,iBACjDkB,EAAW/E,KAAKsD,GAEhBA,GAAYA,EAASO,gBACrBP,EAASO,eAAe3C,SAAQ,SAAC4C,GAC7BiB,EAAW/E,KAAK8D,MAGxBN,EAAgBuB,KACjB,CAACzB,IAGAa,EACA,OAAO,qDACJ,GAAKE,EAEL,CACH,IAAIW,EAAW,GACXC,EAAe,GASnB,OARAtE,EAAMO,SAAQ,SAACH,GACXA,EAAKI,KAAKD,SAAQ,SAACC,GACV6D,EAAS5D,SAASD,IAAO6D,EAAShF,KAAKmB,MAEhDJ,EAAKO,WAAWJ,SAAQ,SAACG,GAChB4D,EAAa7D,SAASC,IAAW4D,EAAajF,KAAKqB,SAI5D,6BACI,4BAAQG,UAAU,UACd,yBAAKmB,MAAO,CAACe,OAAQ,SAAUpB,IAAI,2DAEvC,4BAAQd,UAAU,UAAlB,KACA,kBAAC,IAAD,CAAe0D,SAAS,sBACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC1B,kBAAC,EAAD,CACI1E,MAAOA,EACPoB,MAAOiD,EACP1D,WAAY2D,EACZ/B,aAAcA,EACd3B,gBAAiBA,EACjB3B,YAAaA,EACbS,eAAgBA,EAChBE,gBAAiBA,EACjBC,mBAAoBA,EACpBmB,OAAQA,EACRG,UAAWA,EACXwB,SAAUA,EACVjB,YAAaA,EACbkB,aAAcA,EACdC,gBAAiBA,OAGxBF,EACG,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAChC,kBAAC,EAAD,CACI/B,SAAUA,EACVjB,YAAaA,EACb1B,MAAOA,EACP4C,aAAcA,EACdC,gBAAiBA,OAIzB,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAChC,kBAAC,EAAD,CACI/B,SAAUkB,EACVnC,YAAaA,EACb1B,MAAOA,EACP4C,aAAcA,EACdC,gBAAiBA,UAxDzC,OAAO,4CCzDA8B,MANf,WACE,OACI,kBAAC,EAAD,OCMcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvB,MAAK,SAAAwB,GACJA,EAAaC,gBAEdC,OAAM,SAAAlC,GACLmC,QAAQnC,MAAMA,EAAMoC,c","file":"static/js/main.18826c48.chunk.js","sourcesContent":["var map = {\n\t\"./Bug.svg\": 28,\n\t\"./Dark.svg\": 29,\n\t\"./Dragon.svg\": 30,\n\t\"./Electric.svg\": 31,\n\t\"./Fairy.svg\": 32,\n\t\"./Fighting.svg\": 33,\n\t\"./Fire.svg\": 34,\n\t\"./Flying.svg\": 35,\n\t\"./Ghost.svg\": 36,\n\t\"./Grass.svg\": 37,\n\t\"./Ground.svg\": 38,\n\t\"./Ice.svg\": 39,\n\t\"./Normal.svg\": 40,\n\t\"./Poison.svg\": 41,\n\t\"./Psychic.svg\": 42,\n\t\"./Rock.svg\": 43,\n\t\"./Steel.svg\": 44,\n\t\"./Water.svg\": 45\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 11;","module.exports = __webpack_public_path__ + \"static/media/Bug.3c3b7ab5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Dark.a015eeb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Dragon.ef87a90e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Electric.71d71c8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Fairy.9b43a25c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Fighting.43c2ed0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Fire.1ab14d05.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flying.f4e6d97d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ghost.3d7185b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Grass.ab3ef33b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ground.fd9df481.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ice.02eb5bd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Normal.1f9c13e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Poison.01d85da2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Psychic.017913af.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rock.9af8ebde.svg\";","module.exports = __webpack_public_path__ + \"static/media/Steel.0e56a675.svg\";","module.exports = __webpack_public_path__ + \"static/media/Water.817868f0.svg\";","import React, { useEffect, useState } from 'react';\n\nfunction Filters(props) {\n    \n    const handleChange = event => {\n        props.setSearch(event.target.value);\n    };\n    \n    const handleTypeFilter = (e) => {\n        let typeFilters = [...props.typeFilters]\n\n        if (typeFilters.indexOf(e.target.id) > -1) {\n            typeFilters.splice(typeFilters.indexOf(e.target.id), 1)\n        } else {\n            typeFilters.push(e.target.id)\n        };\n\n        if (e.target.classList.contains('selected')) {\n            e.target.classList.remove('selected');\n        } else {\n            e.target.classList.add('selected');\n        }\n\n        props.setTypeFilters(typeFilters);\n    }\n    \n    const handleWeaknessFilter = (e) => {\n        let weaknessFilters = [...props.weaknessFilters]\n        if (weaknessFilters.indexOf(e.target.id) > -1) {\n            weaknessFilters.splice(weaknessFilters.indexOf(e.target.id), 1)\n        } else {\n            weaknessFilters.push(e.target.id)\n        };\n\n        if (e.target.classList.contains('selected')) {\n            e.target.classList.remove('selected');\n        } else {\n            e.target.classList.add('selected');\n        }\n\n        props.setWeaknessFilters(weaknessFilters);\n    }\n\n\n    useEffect(() => {\n        let fullList = [...props.items]\n        if (!props.typeFilters.length && !props.weaknessFilters.length) {\n            props.setFilteredList(fullList);\n            return;\n        }\n        let filtList = fullList.filter((item) => {\n            let typeFiltered = true;\n            let weaknessFiltered = true;\n            props.typeFilters.forEach((type) => {\n                if (!item.type.includes(type)) {\n                    typeFiltered = false;\n                }\n            });\n            props.weaknessFilters.forEach((weakness) => {\n                if (!item.weaknesses.includes(weakness)) {\n                    weaknessFiltered = false;\n                }\n            });\n\n            return typeFiltered && weaknessFiltered;\n        })\n        props.setFilteredList(filtList)\n    }, [props.typeFilters, props.weaknessFilters])\n\n    return (\n        <div>\n            <div className={true || props.typeFilters.length || props.weaknessFilters.length ? 'filter-div' : 'hidden'}>\n            <input type=\"text\" placeholder=\"Search Pokémon\" value={props.search} onChange={handleChange}/>\n                <h4>FILTER TYPE</h4>\n                <div className=\"filters\">\n                    {props.types.sort().map((type) => {\n                        return (\n                        <div key={type} id={type} className={props.typeFilters.includes(type) ? 'filter-button selected' : 'filter-button'} onClick={handleTypeFilter}>{type}</div>\n                        )\n                    })}\n                </div>\n                <br/>\n                <h4>FILTER WEAKNESSES</h4>\n                <div className=\"filters\">\n                    {props.weaknesses.sort().map((weakness) => {\n                        return (\n                        <div key={weakness} id={weakness} className={props.weaknessFilters.includes(weakness) ? 'filter-button selected' : 'filter-button'} onClick={handleWeaknessFilter}>{weakness}</div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Filters;","import React from 'react'\n\nfunction ListItem(props) {\n    const handleSelect = () => {\n        const pokemon = props.item\n        props.setSelected(pokemon)\n    }\n\n    return (\n        <div className='center'>\n            <div className=\"list-item\" onClick={handleSelect}>\n                <div className='image'>\n                    <img className=\"list-item-img\" src={props.item.img} alt={props.item.name}/>\n                </div>\n                <div className='info'>\n                    <div className='name-num'>\n                        <div className='num'>{props.item.num}</div>\n                        <div className='name'>{props.item.name}</div>\n                    </div>\n                    <div className='types-weaknesses'>\n                        <div className='types'>\n                            <div style={{margin: '-5px 0 4px 0'}}>TYPE</div>\n                            <div style={{display: 'flex', flexDirection: 'row'}}>\n                                {props.item.type.map(type => (\n                                <div key={`${type}-div`} className=\"type-div\">\n                                    <img className='type-small' key={type} alt={type} src={require(`../Images/type_icons/SVG/${type}.svg`)} />\n                                    <p className='hover-text'>{type.toUpperCase()}</p>\n                                </div>\n                                ))} \n                            </div>\n                        </div>\n                        <div className='weaknesses'>\n                            <div style={{margin: '-5px 0 4px 0'}}>WEAKNESSES</div>\n                            <div style={{display: 'flex', flexDirection: 'row'}}>\n                                {props.item.weaknesses.map(weakness => (\n                                <div key={`${weakness}-div`} className=\"type-div\">\n                                    <img className='type-small' key={weakness} alt={weakness} src={require(`../Images/type_icons/SVG/${weakness}.svg`)} />\n                                    <p className='hover-text'>{weakness.toUpperCase()}</p>\n                                </div>\n                                ))} \n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ListItem","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Filters from './Filters';\nimport ListItem from './ListItem';\n\nfunction ListPage(props) {\n    return (\n        <div>\n            <div className=\"filters-container\">\n                <Filters \n                    items={props.items}\n                    types={props.types}\n                    weaknesses={props.weaknesses}\n                    filteredList={props.filteredList}\n                    setFilteredList={props.setFilteredList}\n                    typeFilters={props.typeFilters}\n                    setTypeFilters={props.setTypeFilters}\n                    weaknessFilters={props.weaknessFilters}\n                    setWeaknessFilters={props.setWeaknessFilters}\n                    search={props.search}\n                    setSearch={props.setSearch}\n                />\n            </div>\n            <div className=\"filters-filler\"></div>\n            <div className=\"list-container\">\n                {props.filteredList.filter(item => (\n                    item.name.slice(0, props.search.length).toUpperCase() === props.search.toUpperCase()\n                )).map(item => (\n                    <Link style={{width: '650px', margin: '5px'}} key={`${item.name}-link`} to={`/detail`}>\n                    <ListItem \n                        key={item.name}\n                        item={item}\n                        selected={props.selected}\n                        setSelected={props.setSelected}\n                        selectedEvol={props.selectedEvol}\n                        setSelectedEvol={props.setSelectedEvol}\n                    />\n                    </Link>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ListPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction DetailPage(props) {\n    const pokemon = props.selected\n\n    return (\n        <div className='row'>\n            <Link className=\"back-button\" to=\"/\" onClick={() => props.setSelected(null)}>&larr;&nbsp; RETURN TO LIST</Link>\n            <div className=\"detail-page\">\n                <div className=\"row\">\n                    <div className=\"num\">{pokemon.num}</div>\n                    <div className=\"name\">{pokemon.name}</div>\n                </div>\n                \n                <div className=\"row border5\">\n                    <img className='detail-img' src={pokemon.img} alt={pokemon.img}/>\n                    <div>\n                        <h4>TYPE</h4>\n                        <div className=\"row\">\n                            {pokemon.type.map((type) => {\n                                return(\n                                    <div key={`${type}-div`} className=\"type-div\">\n                                                <img className='type-small' key={type} alt={type} src={require(`../Images/type_icons/SVG/${type}.svg`)} />\n                                                <p className='hover-text'>{type.toUpperCase()}</p>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <h4>WEAKNESSES</h4>\n                        <div className=\"row\">\n                            {pokemon.weaknesses.map((weakness) => {\n                                return(\n                                    <div key={`${weakness}-div`} className=\"type-div\">\n                                        <img className='type-small' key={weakness} alt={weakness} src={require(`../Images/type_icons/SVG/${weakness}.svg`)} />\n                                        <p className='hover-text'>{weakness.toUpperCase()}</p>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <div className=\"row\">\n                            <div style={{margin: 5}}>\n                                <h4>HEIGHT</h4>\n                                <p>{pokemon.height}</p>\n                            </div>\n                            <div style={{margin: 5}}>\n                                <h4>WEIGHT</h4>\n                                <p>{pokemon.weight}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {pokemon.prev_evolution || pokemon.next_evolution ? \n                    <div className=\"column center\">\n                        <h4>EVOLUTION</h4>\n                        <div className='row'>\n                            {props.selectedEvol.map((evol) => {\n                                return (\n                                    <div className=\"thumbnail\" onClick={() => props.setSelected(props.items.find(el => el.name === evol.name))}>\n                                        <h5>{evol.name.toUpperCase()}</h5>\n                                        <img className=\"evol-img\" src={`http://www.serebii.net/pokemongo/pokemon/${evol.num}.png`}/>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                :\n                    null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default DetailPage;","import React, { useEffect, useState } from 'react';\nimport ListPage from './ListPage';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport DetailPage from './DetailPage';\n\nfunction Pokedex() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    const [filteredList, setFilteredList] = useState([]);\n    const [typeFilters, setTypeFilters] = useState([]);\n    const [weaknessFilters, setWeaknessFilters] = useState([]);\n    const [search, setSearch] = useState('');\n    const [selected, setSelected] = useState(null);\n    const [prevSelected, setPrevSelected] = useState(null)\n    const [selectedEvol, setSelectedEvol] = useState([]);\n\n    \n\n    useEffect(() => {\n        fetch(\"https://raw.githubusercontent.com/Biuni/PokemonGO-Pokedex/master/pokedex.json\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setItems(result.pokemon);\n                    setFilteredList(result.pokemon);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    useEffect(() => {\n        setPrevSelected(items[0])\n    }, [items])\n\n    useEffect(() => {\n        if (selected && selected !== prevSelected) {\n            setPrevSelected(selected);\n        }\n    }, [selected])\n\n    useEffect(() => {\n        let evolutions = [];\n        if (selected && selected.prev_evolution) {\n            selected.prev_evolution.forEach((evol) => {\n                evolutions.push(evol)\n            })\n        };\n        if (selected && (selected.prev_evolution || selected.next_evolution)) {\n            evolutions.push(selected)\n        };\n        if (selected && selected.next_evolution) {\n            selected.next_evolution.forEach((evol) => {\n                evolutions.push(evol)\n            })\n        };\n        setSelectedEvol(evolutions)\n    }, [selected])\n    \n\n    if (error) {\n        return <div>Error: error.message</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        let typeList = [];\n        let weaknessList = [];\n        items.forEach((item) => {\n            item.type.forEach((type) => {\n                if (!typeList.includes(type)) typeList.push(type);\n            })\n            item.weaknesses.forEach((weakness) => {\n                if (!weaknessList.includes(weakness)) weaknessList.push(weakness);\n            })\n        });\n        return (\n            <div>\n                <header className='center'>\n                    <img style={{height: '200px'}} src=\"https://pbs.twimg.com/media/EOgcFoyXkAAzlbL.png:large\"/>\n                </header>\n                <header className='filler'> </header>\n                <BrowserRouter basename='/pokedex-challenge'>\n                <Switch>\n                    <Route exact path='/' render={() => \n                        <ListPage \n                            items={items}\n                            types={typeList}\n                            weaknesses={weaknessList}\n                            filteredList={filteredList}\n                            setFilteredList={setFilteredList}\n                            typeFilters={typeFilters}\n                            setTypeFilters={setTypeFilters}\n                            weaknessFilters={weaknessFilters}\n                            setWeaknessFilters={setWeaknessFilters}\n                            search={search}\n                            setSearch={setSearch}\n                            selected={selected}\n                            setSelected={setSelected}\n                            selectedEvol={selectedEvol}\n                            setSelectedEvol={setSelectedEvol}\n                        />\n                    }/>\n                    {selected ? \n                        <Route exact path=\"/detail\" render={() => \n                            <DetailPage\n                                selected={selected}\n                                setSelected={setSelected}\n                                items={items}\n                                selectedEvol={selectedEvol}\n                                setSelectedEvol={setSelectedEvol}\n                            />\n                        }/>\n                    : \n                        <Route exact path=\"/detail\" render={() => \n                            <DetailPage\n                                selected={prevSelected}\n                                setSelected={setSelected}\n                                items={items}\n                                selectedEvol={selectedEvol}\n                                setSelectedEvol={setSelectedEvol}\n                            />\n                        }/>\n                    }\n                </Switch>\n                </BrowserRouter>\n            </div> \n        )\n    }\n}\n\nexport default Pokedex;","import React from 'react';\nimport './App.css';\nimport Pokedex from './Components/Pokedex';\n\nfunction App() {\n  return (\n      <Pokedex/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}